#!/bin/bash
SCRIPTS_DIR=`dirname $0`
source ${SCRIPTS_DIR}/utils.sh

function init_l1_code_read_MPI() {
  #Specify an arrau with counter needed for this metric" 
  #See below example

  local local_pmu_array=(instructions l2_rqsts.code_rd_miss)
  local local_pmus
  for item in ${local_pmu_array[*]}
  do
    if [ "x${local_pmus}" == "x" ]; then
      local_pmus="$item"
    else
      local_pmus="$local_pmus,$item"
    fi
  done
  echo $local_pmus
}

function calc_l1_code_read_MPI() {
  local perf_data_file="$1"
  echo
  echo "================================================="
  echo "Final metric name to display"
  echo "--------------------------------------------------"
  echo "FORMULA: metric_name = formula for e.g. 100*(a/b)"
  echo "         where, a=pmu1"
  echo "                b=pmu2"
  echo "================================================="

  local a=`return_pmu_value "<pmu1 name>" $perf_data_file `
  local b=`return_pmu_value "<pmu2 name>" $perf_data_file`

  if [ $a == -1 -o $b == -1 ]; then
    echo "ERROR: metric_name can't be derived. Missing pmus"
  else
    local metric=`echo "scale=$scale;100*(${a}/${b})"| bc -l`
    echo "metric_name=${metric}"
  fi
  echo
}
